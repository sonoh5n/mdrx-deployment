
- name: ensure app service accounts
  google.cloud.gcp_iam_service_account:
    name: '{{ item.service_account_name }}'
    project: '{{ project_id }}'
    auth_kind: application
    state: present
  register: service_account

- name: get existing service account key secret
  community.kubernetes.k8s_info:
    api_version: v1
    kind: Secret
    name: '{{ item.secret_name }}'
    namespace: '{{ namespace_name }}'
  register: existing_secret_info

- name: store service account key in secret
  when: not existing_secret_info.resources
  block:
    - name: create temporary directory for credentials file
      tempfile:
        state: directory
      register: credentials_file_directory

    - name: set path for credentials file
      set_fact:
        credentials_file_path: '{{ credentials_file_directory.path }}/google-credentials.json'

    - name: debug
      debug:
        msg: '{{ credentials_file_path }}'

    - name: ensure service account keys
      google.cloud.gcp_iam_service_account_key:
        service_account: "{{ service_account }}"
        private_key_type: TYPE_GOOGLE_CREDENTIALS_FILE
        path: '{{ credentials_file_path }}'
        project: '{{ project_id }}'
        auth_kind: application
        state: present
      register: service_account_key

    - name: store credentials file in secret
      community.kubernetes.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: '{{ item.secret_name }}'
            namespace: '{{ namespace_name }}'
          type: Opaque
          data:
            google-credentials.json: "{{ lookup('file', credentials_file_path)|b64encode }}"
